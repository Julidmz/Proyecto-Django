
 C - Create  --> Vista --> Get(Form vacio) / Post (Form)

 R - Read    --> Consulta a la base de datos (Obtener los datos y mostrarlos)

 U - Update

 D - Delete 



 If request.Method = "Post":     

    GuardarRegistro

 Else:

    Mostrar Form




 * Renderizar un formulario

 * DOM de javascript

 * propiedades de un formulario en html: action --> para indicar la ruta donde tiene que enviar la información para que se procese en el backend;

 * propiedades de un formulario en html: metodo --> para indicar por o el metodo get o el metodo post para enviar informacion;

 * Input del tipo submit -- > esta diseñado para hacer el envio de la informacion

 * Refrescar capas de modelo OSI

 * Peticiones asincronas

 * Libreria CrispiFoms

 * Para una nueva funcionalidad en django:
  
  - Crear una ruta que apunte a una vista para obtener informacion a traves de interfaz web (template) y el template va a renderizar     la info solicitada, en este caso productos.

* ORM del framework

* Tipo de dato QuerySet que solo existe adentro del framework Django que permite almacenar multiples elementos. Lo hace el ORM automaticamente

* QuerySet es una lista de objetos, tiene indice 0

* Sobreescritura de metodo / Sobrecarga de metodo

* Try Catch